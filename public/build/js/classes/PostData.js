import Validar from"./Validar.js";import Alerta from"./Alerta.js";export default class PostDatos{static async guardarDatos(r,t){const a=PostDatos.crearFormData(t);if(!1===a)return null;try{const t=await fetch(r,{method:"POST",body:a});return await t.json()}catch(r){Alerta.Toast.fire({icon:"error",title:"Upss!",text:"Hubo un error, recargue la pagina"}),console.error(r)}}static crearFormData(r){const t=Validar.validarInputs(r);if(!1===t)return!1;{const r=new FormData;for(const[a,o]of Object.entries(t))r.append(a,o);return r}}static async actualizarDato(r,t){const a=new FormData;a.append("id",t);try{const t=await fetch(r,{method:"POST",body:a});return await t.json()}catch(r){Alerta.Toast.fire({icon:"error",title:"Upss!",text:"Hubo un error, recargue la pagina"}),console.error(r)}}static async eliminarDatos(r,t,a="id"){const o=new FormData;o.append(a,t);try{const t=await fetch(r,{method:"POST",body:o});return await t.json()}catch(r){Alerta.Toast.fire({icon:"error",title:"Upss!",text:"Hubo un error, recargue la pagina"}),console.error(r)}}static async enviarArray(r,t){const a=new FormData;a.append("args",t);try{const t=await fetch(r,{method:"POST",body:a});return await t.json()}catch(r){Alerta.Toast.fire({icon:"error",title:"Upss!",text:"Hubo un error, recargue la pagina"}),console.error(r)}}}